<Application x:Class="SoftFluent.Windows.Samples.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase" 
             xmlns:sfw="clr-namespace:SoftFluent.Windows;assembly=SoftFluent.Windows"
             xmlns:samples="clr-namespace:SoftFluent.Windows.Samples"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <sfw:UniversalConverter x:Key="BoolToDefaultValueBackgroundConverter">
            <sfw:UniversalConverter.Switch>
                <sfw:UniversalConverterCase Value="true" ConvertedValue="#F0F0F0" />
            </sfw:UniversalConverter.Switch>
        </sfw:UniversalConverter>

        <sfw:ChangeTypeConverter x:Key="ChangeTypeConverter" />

        <DataTemplate x:Key="AddressListEditor">
            <DockPanel LastChildFill="true" ToolTip="{Binding Value, Mode=OneWay}">
                <Button IsEnabled="{Binding IsReadWrite}" Width="24" HorizontalContentAlignment="Center" Content="..." DockPanel.Dock="Right"
                        Command="{x:Static sfw:PropertyGrid.BrowseCommand}" CommandParameter="AddressListEditorWindow" />
                <TextBox IsReadOnly="True"
                         Background="{Binding IsDefaultValue, Converter={StaticResource BoolToDefaultValueBackgroundConverter}}" 
                         Text="{Binding TextValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                         DockPanel.Dock="Left" />
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="BooleanDropDownListEditor">
            <ComboBox SelectedValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Value" DisplayMemberPath="Key" ItemsSource="{samples:BooleanValueProvider IsNullable=False}" />
        </DataTemplate>

        <DataTemplate x:Key="NullableBooleanDropDownListEditor">
            <ComboBox SelectedValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Value" DisplayMemberPath="Key" ItemsSource="{samples:BooleanValueProvider IsNullable=True}" />
        </DataTemplate>

        <samples:AddressListEditorWindow x:Shared="False" x:Key="AddressListEditorWindow" />

        <DataTemplate x:Key="CustomEditor">
            <DockPanel LastChildFill="true" ToolTip="{Binding Value, Mode=OneWay}">

                <Button IsEnabled="{Binding IsReadWrite}" Width="24" HorizontalContentAlignment="Center" Content="..." DockPanel.Dock="Right"
                        Command="{x:Static sfw:PropertyGrid.BrowseCommand}" CommandParameter="CustomEditorWindow" />
                
                <Button Width="Auto" HorizontalContentAlignment="Center" Content="Preview" DockPanel.Dock="Right"
                        Command="{x:Static sfw:PropertyGrid.BrowseCommand}" CommandParameter="UrlPreviewWindow" />
                
                <TextBox IsReadOnly="{Binding IsReadOnly}" 
                         Background="{Binding IsDefaultValue, Converter={StaticResource BoolToDefaultValueBackgroundConverter}}" 
                         Text="{Binding TextValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                         DockPanel.Dock="Left" />
            </DockPanel>
        </DataTemplate>

        <Window x:Shared="false" x:Key="UrlPreviewWindow" Name="UrlPreviewWindow" Title="Text" Height="400" Width="400">
            <Window.CommandBindings>
                <CommandBinding Command="Close" CanExecute="OnEditorWindowCloseCanExecute" Executed="OnEditorWindowCloseExecuted" />
            </Window.CommandBindings>
            <Window.InputBindings>
                <KeyBinding Key="Escape" Command="Close" />
            </Window.InputBindings>
            <Grid>
                <WebBrowser samples:Utilities.BindableSource="{Binding Value, Mode=OneWay}"></WebBrowser>
            </Grid>
        </Window>

        <Window x:Shared="false" x:Key="CustomEditorWindow" Name="CustomEditorWindow" Title="Text" Height="400" Width="400">
            <Window.CommandBindings>
                <CommandBinding Command="Close" CanExecute="OnEditorWindowCloseCanExecute" Executed="OnEditorWindowCloseExecuted" />
            </Window.CommandBindings>
            <Window.InputBindings>
                <KeyBinding Key="Escape" Command="Close" />
            </Window.InputBindings>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="45" />
                </Grid.RowDefinitions>
                <TextBox Grid.Row="0" 
                         AcceptsReturn="True" 
                         Text="{Binding Value}" 
                         IsReadOnly="{Binding IsReadOnly}" 
                         ScrollViewer.VerticalScrollBarVisibility="Auto" 
                         ScrollViewer.HorizontalScrollBarVisibility="Auto" 
                         FontFamily="{Binding Attributes.FontFamily}" />
                <Button Name="CustomEditorWindowClose"
                        Grid.Row="1" 
                        IsDefault="True" 
                        Content="Close"
                        Command="Close"
                        Margin="0,0,10,10"
                        HorizontalAlignment="Right" 
                        Width="75"
                        Height="23"
                        VerticalAlignment="Bottom" />
            </Grid>
        </Window>

        <DataTemplate x:Key="PercentEditor">
            <Slider ToolTip="{Binding TextValue}" Orientation="Horizontal" IsSnapToTickEnabled="True"
                    Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ChangeTypeConverter}, ConverterParameter={x:Type sys:Double}}"
                    Minimum="0"
                    Maximum="100"
                    Interval="1"
                    IsEnabled="{Binding IsReadWrite}"
                    Background="{Binding IsDefaultValue, Converter={StaticResource BoolToDefaultValueBackgroundConverter}}"></Slider>
        </DataTemplate>

        <DataTemplate x:Key="ColorEditor">
            <DataTemplate.Resources>
                <ObjectDataProvider ObjectInstance="{x:Type Colors}" MethodName="GetProperties" x:Key="colorPropertiesOdp" />
            </DataTemplate.Resources>

            <ComboBox SelectedValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      ItemsSource="{Binding Source={StaticResource colorPropertiesOdp}}"
                      SelectedValuePath="Name">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" Height="18" Margin="0,0,0,2">
                            <Border BorderThickness="1" CornerRadius="2" BorderBrush="Black" Width="50" VerticalAlignment="Stretch" Background="{Binding Name}"/>
                            <TextBlock Text="{Binding Name}" Margin="8,0,0,0"/>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

        </DataTemplate>

        <DataTemplate x:Key="FontEditor">
            <ComboBox ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <ComboBox.Resources>
                    <CollectionViewSource x:Key="Fonts" Source="{Binding Source={x:Static Fonts.SystemFontFamilies}}">
                        <CollectionViewSource.SortDescriptions>
                            <componentModel:SortDescription PropertyName="Source" />
                        </CollectionViewSource.SortDescriptions>
                    </CollectionViewSource>

                    <Style x:Key="FontStyle">
                        <Setter Property="Control.FontFamily" Value="{Binding Source}" />
                        <Setter Property="Control.FontSize" Value="16" />
                    </Style>

                    <DataTemplate x:Key="FontTemplate">
                        <StackPanel VirtualizingStackPanel.IsVirtualizing="True">
                            <TextBlock Style="{StaticResource FontStyle}" Text="{Binding Source}" ToolTip="{Binding Source}" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.Resources>

                <ComboBox.ItemsSource>
                    <Binding Source="{StaticResource Fonts}" />
                </ComboBox.ItemsSource>
            </ComboBox>
        </DataTemplate>

        <DataTemplate x:Key="PasswordEditor">
            <PasswordBox samples:Utilities.BindPassword="True" samples:Utilities.BindablePassword="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></PasswordBox>
        </DataTemplate>
    </Application.Resources>
</Application>
